name: Monthly Cache Refresh

on:
  schedule:
    # Run at midnight on the first day of each month
    - cron: '0 0 1 * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  refresh-cache:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run cache refresh
      env:
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
        ENABLE_MONITORING: true
        NEW_RELIC_LICENSE_KEY: ${{ secrets.NEW_RELIC_LICENSE_KEY }}
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      run: node scripts/refresh-cache.js

    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          const issue = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'Cache Refresh Failed',
            body: `Monthly cache refresh failed on ${new Date().toISOString()}\n\nPlease check the [workflow run](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) for details.`,
            labels: ['bug', 'cache']
          });
          
          // Also create a Slack notification if configured
          if (process.env.SLACK_WEBHOOK_URL) {
            await fetch(process.env.SLACK_WEBHOOK_URL, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({
                text: `⚠️ Cache refresh failed!\nCheck the issue: ${issue.data.html_url}`
              })
            });
          }
