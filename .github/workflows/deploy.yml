name: Deploy Website

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - staging
        - production

jobs:
  pre-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Dependencies
      run: npm ci

    - name: Run Pre-deployment Checks
      run: npm run pre-deploy
      env:
        NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
        NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}
        MONGODB_URI: ${{ secrets.MONGODB_URI }}

  deploy:
    needs: pre-deploy
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Dependencies
      run: npm ci

    - name: Build
      run: npm run build
      env:
        NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
        NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}
        MONGODB_URI: ${{ secrets.MONGODB_URI }}

    - name: Deploy to Vercel
      run: |
        npm i -g vercel
        vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

    - name: Create Deployment Tag
      run: |
        git tag "deploy-$(date +%Y%m%d-%H%M%S)"
        git push origin --tags

    - name: Notify on Success
      if: success()
      run: |
        echo "üöÄ Deployment successful!"
        echo "Site is now live at ${{ secrets.NEXT_PUBLIC_SITE_URL }}"

    - name: Notify on Failure
      if: failure()
      run: |
        echo "‚ùå Deployment failed!"
        echo "Please check the logs for more information."
